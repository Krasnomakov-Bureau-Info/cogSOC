name: Update README

on:
  push:
    paths:
      - 'articles/**/*.md'
      - '.github/workflows/update-readme.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Generate README Table of Contents and Calculate Totals
        id: generate_toc
        run: |
          # Ensure UTF-8 handling (for emoji and non-ASCII titles)
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
          SECTIONS=(definitions observations attacks defense future-threats future-defenses history cybersecurity surveillance humor)
          # Max characters for the article link text to keep table width stable in GitHub UI
          # Reduce if tables still wrap inconsistently.
          MAX_NAME_LEN=56
          declare -A SECTION_TITLES
          SECTION_TITLES[definitions]="Definitions"
          SECTION_TITLES[observations]="Observations"
          SECTION_TITLES[attacks]="Attacks and Operations"
          SECTION_TITLES[defense]="Defense Strategies"
          SECTION_TITLES[future-threats]="Future Threats (Evolving Threats)"
          SECTION_TITLES[future-defenses]="Future Defenses (Against Evolving Threats)"
          SECTION_TITLES[history]="History"
          SECTION_TITLES[cybersecurity]="Cybersecurity"
          SECTION_TITLES[surveillance]="Surveillance"
          SECTION_TITLES[humor]="Humor"

          TOC=""
          TOTAL_ENERGY=0
          TOTAL_EXPERIENCE=0

          TOC+="| Name | Energy cost | Experience cost |\n| --- | ---: | ---: |\n"

          for section in "${SECTIONS[@]}"; do
            files=$(find articles -type f -name "*.md" -path "*/$section/*" | sort)
            if [ -n "$files" ]; then
              TOC+="\n| **${SECTION_TITLES[$section]}** | | |\n"
              for file in $files; do
                title=$(grep -m1 '^# ' "$file" | sed 's/^# //' | sed 's/\[/\\\[/g' | sed 's/\]/\\\]/g' | sed 's/|/\\|/g')
                [ -z "$title" ] && title=$(basename "$file" .md | sed 's/|/\\|/g')

                # Truncate title to fixed length with ellipsis (Unicode-safe) using python -c
                title=$(TRUNC_N="$MAX_NAME_LEN" python3 -c 'import os,sys; n=int(os.environ.get("TRUNC_N","80")); s=sys.stdin.read().rstrip("\n"); print(s if len(s)<=n else s[:max(0,n-1)]+"â€¦")' <<< "$title")

                energy=$(grep -m1 '^energy:' "$file" | sed 's/^energy: //')
                experience=$(grep -m1 '^experience:' "$file" | sed 's/^experience: //')

                # Format numeric cells to three decimals if present; otherwise use '-'
                if echo "$energy" | grep -Eq '^[0-9]*\.?[0-9]+$'; then
                  energy_cell=$(printf '%.3f' "$energy")
                else
                  energy_cell="-"
                fi
                if echo "$experience" | grep -Eq '^[0-9]*\.?[0-9]+$'; then
                  experience_cell=$(printf '%.3f' "$experience")
                else
                  experience_cell="-"
                fi

                TOC+="| [${title}](./$file) | ${energy_cell} | ${experience_cell} |\n"

                if [ -n "$energy" ] && [ -n "$experience" ]; then
                  TOTAL_ENERGY=$(echo "$TOTAL_ENERGY + $energy" | bc -l)
                  TOTAL_EXPERIENCE=$(echo "$TOTAL_EXPERIENCE + $experience" | bc -l)
                fi
              done
            fi
          done
          # Format totals to three decimal places
          TOTAL_ENERGY_FMT=$(printf "%.3f" "$TOTAL_ENERGY")
          TOTAL_EXPERIENCE_FMT=$(printf "%.3f" "$TOTAL_EXPERIENCE")
          echo "toc<<EOF" >> $GITHUB_OUTPUT
          echo -e "$TOC" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "total_energy=$TOTAL_ENERGY_FMT" >> $GITHUB_OUTPUT
          echo "total_experience=$TOTAL_EXPERIENCE_FMT" >> $GITHUB_OUTPUT

      - name: Update README
        run: |
          TOTAL_ENERGY=${{ steps.generate_toc.outputs.total_energy }}
          TOTAL_EXPERIENCE=${{ steps.generate_toc.outputs.total_experience }}
          TOC="${{ steps.generate_toc.outputs.toc }}"
          
          # Update TOC
          awk -v toc="$TOC" '
            BEGIN {inblk=0}
            /<!-- toc-articles-auto-generated -->/ {print; print toc; inblk=1; next}
            /<!-- toc-articles-auto-generated-end -->/ {print; inblk=0; next}
            !inblk {print}
          ' README.md > README.tmp && mv README.tmp README.md

          # Update totals
          sed -i "s/^\*\*Current energy level:\*\* \`.*\`/\\*\\*Current energy level:\\*\\* \`$TOTAL_ENERGY\`/" README.md
          sed -i "s/^\*\*Current experience level:\*\* \`.*\`/\\*\\*Current experience level:\\*\\* \`$TOTAL_EXPERIENCE\`/" README.md

      - name: Commit changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "docs: update README with article weights and totals"
            git push
          fi
